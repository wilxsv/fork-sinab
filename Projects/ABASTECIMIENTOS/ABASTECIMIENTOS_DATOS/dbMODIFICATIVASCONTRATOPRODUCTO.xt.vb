Partial Public Class dbMODIFICATIVASCONTRATOPRODUCTO

#Region " Metodos Agregados "

    Public Function obtenerCantidadModificativa(ByVal IDESTABLECIMIENTO As Integer, ByVal IDPROVEEDOR As Integer, ByVal IDCONTRATO As Integer, ByVal RENGLON As Integer) As DataSet

        Dim strSQL As New Text.StringBuilder
        strSQL.Append(" SELECT IDESTABLECIMIENTO, IDPROVEEDOR, IDCONTRATO, IDMODIFICATIVA, RENGLON, DESCRIPCION, CANTIDADCONTRATADA, PRECIOUNITARIO, ")
        strSQL.Append(" AUUSUARIOCREACION, AUFECHACREACION, AUUSUARIOMODIFICACION, AUFECHAMODIFICACION, ESTASINCRONIZADA ")
        strSQL.Append(" FROM SAB_UACI_MODIFICATIVASCONTRATOPRODUCTO ")
        strSQL.Append(" WHERE (IDESTABLECIMIENTO = " & IDESTABLECIMIENTO & ") AND (IDPROVEEDOR = " & IDPROVEEDOR & ") AND (IDCONTRATO = " & IDCONTRATO & ") AND (RENGLON = " & RENGLON & ") AND (IDMODIFICATIVA = ")
        strSQL.Append(" (SELECT MAX(IDMODIFICATIVA) AS IDMODIFICATIVA ")
        strSQL.Append(" FROM SAB_UACI_MODIFICATIVASCONTRATOPRODUCTO AS SAB_UACI_MODIFICATIVASCONTRATOPRODUCTO_1 ")
        strSQL.Append(" GROUP BY IDESTABLECIMIENTO, IDPROVEEDOR, IDCONTRATO, RENGLON ")
        strSQL.Append(" HAVING (IDESTABLECIMIENTO = " & IDESTABLECIMIENTO & ") AND (IDPROVEEDOR = " & IDPROVEEDOR & ") AND (IDCONTRATO = " & IDCONTRATO & ") AND (RENGLON = " & RENGLON & "))) ")

        Dim ds As DataSet
        ds = SqlHelper.ExecuteDataset(Me.cnnStr, CommandType.Text, strSQL.ToString())

        Return ds

    End Function

    Public Function obtenerProductoModificativa(ByVal IDESTABLECIMIENTO As Integer, ByVal IDPROVEEDOR As Integer, ByVal IDCONTRATO As Integer, ByVal IDMODIFICATIVA As Integer) As DataSet

        Dim strSQL As New Text.StringBuilder
        strSQL.Append(" SELECT DISTINCT RENGLON, CODIGO, DESCRIPCION ")
        strSQL.Append(" FROM (SELECT SAB_UACI_MODIFICATIVASCONTRATOPRODUCTO.RENGLON, SAB_CAT_CATALOGOPRODUCTOS.CODIGO, ")
        strSQL.Append(" SAB_UACI_MODIFICATIVASCONTRATOPRODUCTO.DESCRIPCION ")
        strSQL.Append(" FROM SAB_UACI_MODIFICATIVASCONTRATOPRODUCTO INNER JOIN ")
        strSQL.Append(" SAB_UACI_CONTRATOSPROCESOCOMPRA ON ")
        strSQL.Append(" SAB_UACI_MODIFICATIVASCONTRATOPRODUCTO.IDESTABLECIMIENTO = SAB_UACI_CONTRATOSPROCESOCOMPRA.IDESTABLECIMIENTO ")
        strSQL.Append("  AND SAB_UACI_MODIFICATIVASCONTRATOPRODUCTO.IDPROVEEDOR = SAB_UACI_CONTRATOSPROCESOCOMPRA.IDPROVEEDOR AND ")
        strSQL.Append(" SAB_UACI_MODIFICATIVASCONTRATOPRODUCTO.IDCONTRATO = SAB_UACI_CONTRATOSPROCESOCOMPRA.IDCONTRATO INNER JOIN ")
        strSQL.Append(" SAB_UACI_DETALLEPROCESOCOMPRA ON ")
        strSQL.Append(" SAB_UACI_CONTRATOSPROCESOCOMPRA.IDESTABLECIMIENTO = SAB_UACI_DETALLEPROCESOCOMPRA.IDESTABLECIMIENTO AND ")
        strSQL.Append(" SAB_UACI_CONTRATOSPROCESOCOMPRA.IDPROCESOCOMPRA = SAB_UACI_DETALLEPROCESOCOMPRA.IDPROCESOCOMPRA AND ")
        strSQL.Append(" SAB_UACI_MODIFICATIVASCONTRATOPRODUCTO.RENGLON = SAB_UACI_DETALLEPROCESOCOMPRA.RENGLON INNER JOIN ")
        strSQL.Append(" SAB_CAT_CATALOGOPRODUCTOS ON ")
        strSQL.Append(" SAB_UACI_DETALLEPROCESOCOMPRA.IDPRODUCTO = SAB_CAT_CATALOGOPRODUCTOS.IDPRODUCTO ")
        strSQL.Append(" WHERE (SAB_UACI_MODIFICATIVASCONTRATOPRODUCTO.IDESTABLECIMIENTO = " & IDESTABLECIMIENTO & ") AND ")
        strSQL.Append(" (SAB_UACI_MODIFICATIVASCONTRATOPRODUCTO.IDPROVEEDOR = " & IDPROVEEDOR & ") AND ")
        strSQL.Append(" (SAB_UACI_MODIFICATIVASCONTRATOPRODUCTO.IDCONTRATO = " & IDCONTRATO & ") AND ")
        strSQL.Append(" (SAB_UACI_MODIFICATIVASCONTRATOPRODUCTO.IDMODIFICATIVA = " & IDMODIFICATIVA & ") ")
        strSQL.Append(" UNION ")
        strSQL.Append(" SELECT SAB_UACI_MODIFICATIVASCONTRATOPRODUCTO_1.RENGLON, SAB_CAT_CATALOGOPRODUCTOS_1.CODIGO, ")
        strSQL.Append("                       SAB_UACI_MODIFICATIVASCONTRATOPRODUCTO_1.DESCRIPCION ")
        strSQL.Append(" FROM SAB_UACI_MODIFICATIVASCONTRATOPRODUCTO AS SAB_UACI_MODIFICATIVASCONTRATOPRODUCTO_1 INNER JOIN ")
        strSQL.Append("                       SAB_UACI_CONTRATOSPROCESOCOMPRA AS SAB_UACI_CONTRATOSPROCESOCOMPRA_1 ON ")
        strSQL.Append("                       SAB_UACI_MODIFICATIVASCONTRATOPRODUCTO_1.IDESTABLECIMIENTO = SAB_UACI_CONTRATOSPROCESOCOMPRA_1.IDESTABLECIMIENTO ")
        strSQL.Append(" AND ")
        strSQL.Append(" SAB_UACI_MODIFICATIVASCONTRATOPRODUCTO_1.IDPROVEEDOR = SAB_UACI_CONTRATOSPROCESOCOMPRA_1.IDPROVEEDOR AND ")
        strSQL.Append(" SAB_UACI_MODIFICATIVASCONTRATOPRODUCTO_1.IDCONTRATO = SAB_UACI_CONTRATOSPROCESOCOMPRA_1.IDCONTRATO INNER JOIN ")
        strSQL.Append("                       SAB_UACI_DETALLEPROCESOCOMPRA AS SAB_UACI_DETALLEPROCESOCOMPRA_1 ON ")
        strSQL.Append("                       SAB_UACI_CONTRATOSPROCESOCOMPRA_1.IDESTABLECIMIENTO = SAB_UACI_DETALLEPROCESOCOMPRA_1.IDESTABLECIMIENTO AND ")
        strSQL.Append("                       SAB_UACI_CONTRATOSPROCESOCOMPRA_1.IDPROCESOCOMPRA = SAB_UACI_DETALLEPROCESOCOMPRA_1.IDPROCESOCOMPRA AND ")
        strSQL.Append("                       SAB_UACI_MODIFICATIVASCONTRATOPRODUCTO_1.RENGLON = SAB_UACI_DETALLEPROCESOCOMPRA_1.RENGLON INNER JOIN ")
        strSQL.Append("                       SAB_CAT_CATALOGOPRODUCTOS AS SAB_CAT_CATALOGOPRODUCTOS_1 ON ")
        strSQL.Append("                       SAB_UACI_DETALLEPROCESOCOMPRA_1.IDPRODUCTO = SAB_CAT_CATALOGOPRODUCTOS_1.IDPRODUCTO ")
        strSQL.Append(" WHERE (SAB_UACI_MODIFICATIVASCONTRATOPRODUCTO_1.IDESTABLECIMIENTO = " & IDESTABLECIMIENTO & ") AND ")
        strSQL.Append("                       (SAB_UACI_MODIFICATIVASCONTRATOPRODUCTO_1.IDPROVEEDOR = " & IDPROVEEDOR & ") AND ")
        strSQL.Append("                       (SAB_UACI_MODIFICATIVASCONTRATOPRODUCTO_1.IDCONTRATO = " & IDCONTRATO & ") AND ")
        strSQL.Append("                       (SAB_UACI_MODIFICATIVASCONTRATOPRODUCTO_1.IDMODIFICATIVA = " & IDMODIFICATIVA & ") AND ")
        strSQL.Append("                       (SAB_UACI_MODIFICATIVASCONTRATOPRODUCTO_1.RENGLON IN ")
        strSQL.Append("    (SELECT RENGLON ")
        strSQL.Append("      FROM SAB_UACI_ENTREGACONTRATO ")
        strSQL.Append("      WHERE (IDESTABLECIMIENTO = " & IDESTABLECIMIENTO & ") AND (IDPROVEEDOR = " & IDPROVEEDOR & ") AND (IDCONTRATO = " & IDCONTRATO & ") AND (ESTAHABILITADA = 1) AND ")
        strSQL.Append(" (IDMODIFICATIVA = " & IDMODIFICATIVA & ") ")
        strSQL.Append("      GROUP BY RENGLON))) AS A ")

        Return SqlHelper.ExecuteDataset(Me.cnnStr, CommandType.Text, strSQL.ToString())

    End Function

    Public Function obtenerDetalleEntregaModificativa(ByVal IDESTABLECIMIENTO As Integer, ByVal IDPROVEEDOR As Integer, ByVal IDCONTRATO As Integer, ByVal RENGLON As Integer)

        Dim strSQL As New Text.StringBuilder
        strSQL.Append(" SELECT SAB_UACI_ENTREGACONTRATO.ENTREGA, SAB_UACI_ENTREGACONTRATO.PORCENTAJEENTREGA, ")
        strSQL.Append(" SAB_UACI_ENTREGACONTRATO.PLAZOENTREGA, SAB_UACI_ENTREGACONTRATO.IDDETALLE, ")
        strSQL.Append(" SAB_UACI_ALMACENESENTREGACONTRATOS.CANTIDAD ")
        strSQL.Append(" FROM SAB_UACI_ENTREGACONTRATO INNER JOIN ")
        strSQL.Append(" SAB_UACI_ALMACENESENTREGACONTRATOS ON ")
        strSQL.Append(" SAB_UACI_ENTREGACONTRATO.IDESTABLECIMIENTO = SAB_UACI_ALMACENESENTREGACONTRATOS.IDESTABLECIMIENTO AND ")
        strSQL.Append(" SAB_UACI_ENTREGACONTRATO.IDPROVEEDOR = SAB_UACI_ALMACENESENTREGACONTRATOS.IDPROVEEDOR AND ")
        strSQL.Append(" SAB_UACI_ENTREGACONTRATO.IDCONTRATO = SAB_UACI_ALMACENESENTREGACONTRATOS.IDCONTRATO AND ")
        strSQL.Append(" SAB_UACI_ENTREGACONTRATO.RENGLON = SAB_UACI_ALMACENESENTREGACONTRATOS.RENGLON AND ")
        strSQL.Append(" SAB_UACI_ENTREGACONTRATO.IDDETALLE = SAB_UACI_ALMACENESENTREGACONTRATOS.IDDETALLE ")
        strSQL.Append(" WHERE (SAB_UACI_ENTREGACONTRATO.IDESTABLECIMIENTO = " & IDESTABLECIMIENTO & ") AND (SAB_UACI_ENTREGACONTRATO.IDPROVEEDOR = " & IDPROVEEDOR & ") AND ")
        strSQL.Append(" (SAB_UACI_ENTREGACONTRATO.IDCONTRATO = " & IDCONTRATO & ") AND (SAB_UACI_ENTREGACONTRATO.RENGLON = " & RENGLON & ") AND ")
        strSQL.Append(" (SAB_UACI_ENTREGACONTRATO.ESTAHABILITADA = 1) ")

        Return SqlHelper.ExecuteDataset(Me.cnnStr, CommandType.Text, strSQL.ToString())

    End Function

    Public Function ObtenerModificativas(ByVal IDESTABLECIMIENTO As Int32, ByVal IDPROVEEDOR As Int32, ByVal IDCONTRATO As Int64, ByVal RENGLON As Int64) As String

        Dim strSQL As New Text.StringBuilder
        strSQL.Append("SELECT MC.NUMEROMODIFICATIVA ")
        strSQL.Append("FROM SAB_UACI_MODIFICATIVASCONTRATOPRODUCTO MCP ")
        strSQL.Append("INNER JOIN SAB_UACI_MODIFICATIVASCONTRATO MC ")
        strSQL.Append("ON (MCP.IDESTABLECIMIENTO = MC.IDESTABLECIMIENTO ")
        strSQL.Append("AND MCP.IDPROVEEDOR = MC.IDPROVEEDOR ")
        strSQL.Append("AND MCP.IDCONTRATO = MC.IDCONTRATO ")
        strSQL.Append("AND MCP.IDMODIFICATIVA = MC.IDMODIFICATIVA) ")
        strSQL.Append("WHERE MCP.IDESTABLECIMIENTO = @IDESTABLECIMIENTO ")
        strSQL.Append("AND MCP.IDPROVEEDOR = @IDPROVEEDOR ")
        strSQL.Append("AND MCP.IDCONTRATO = @IDCONTRATO ")
        strSQL.Append("AND (MCP.RENGLON = @RENGLON OR @RENGLON = 0) ")

        Dim args(4) As SqlParameter
        args(0) = New SqlParameter("@IDESTABLECIMIENTO", SqlDbType.Int)
        args(0).Value = IDESTABLECIMIENTO
        args(1) = New SqlParameter("@IDPROVEEDOR", SqlDbType.Int)
        args(1).Value = IDPROVEEDOR
        args(2) = New SqlParameter("@IDCONTRATO", SqlDbType.BigInt)
        args(2).Value = IDCONTRATO
        args(3) = New SqlParameter("@RENGLON", SqlDbType.BigInt)
        args(3).Value = RENGLON

        Dim dr As SqlDataReader
        dr = SqlHelper.ExecuteReader(Me.cnnStr, CommandType.Text, strSQL.ToString(), args)

        Dim s As New Text.StringBuilder

        Try
            If dr.HasRows Then
                dr.Read()
                s.Append(dr("NUMEROMODIFICATIVA").ToString)

                Do While dr.Read()
                    s.Append(", ")
                    s.Append(dr("NUMEROMODIFICATIVA").ToString)
                Loop
            End If
        Catch ex As Exception
            Throw ex
        Finally
            dr.Close()
        End Try

        Return s.ToString

    End Function

#End Region

End Class
