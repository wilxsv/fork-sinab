'------------------------------------------------------------------------------
' <auto-generated>
'     Este código fue generado por una herramienta.
'     Versión del motor en tiempo de ejecución:2.0.50727.4961
'
'     Los cambios en este archivo podrían causar un comportamiento incorrecto y se perderán si
'     se vuelve a generar el código.
' </auto-generated>
'------------------------------------------------------------------------------

Option Strict Off
Option Explicit On



'''<summary>
'''Represents a strongly typed in-memory cache of data.
'''</summary>
<Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0"),  _
 Global.System.Serializable(),  _
 Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
 Global.System.ComponentModel.ToolboxItem(true),  _
 Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema"),  _
 Global.System.Xml.Serialization.XmlRootAttribute("dsIndices"),  _
 Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")>  _
Partial Public Class dsIndices
    Inherits Global.System.Data.DataSet
    
    Private tableSP_GET_INFO_INDICADORES_MR As SP_GET_INFO_INDICADORES_MRDataTable
    
    Private _schemaSerializationMode As Global.System.Data.SchemaSerializationMode = Global.System.Data.SchemaSerializationMode.IncludeSchema
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Public Sub New()
        MyBase.New
        Me.BeginInit
        Me.InitClass
        Dim schemaChangedHandler As Global.System.ComponentModel.CollectionChangeEventHandler = AddressOf Me.SchemaChanged
        AddHandler MyBase.Tables.CollectionChanged, schemaChangedHandler
        AddHandler MyBase.Relations.CollectionChanged, schemaChangedHandler
        Me.EndInit
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
        MyBase.New(info, context, false)
        If (Me.IsBinarySerialized(info, context) = true) Then
            Me.InitVars(false)
            Dim schemaChangedHandler1 As Global.System.ComponentModel.CollectionChangeEventHandler = AddressOf Me.SchemaChanged
            AddHandler Me.Tables.CollectionChanged, schemaChangedHandler1
            AddHandler Me.Relations.CollectionChanged, schemaChangedHandler1
            Return
        End If
        Dim strSchema As String = CType(info.GetValue("XmlSchema", GetType(String)),String)
        If (Me.DetermineSchemaSerializationMode(info, context) = Global.System.Data.SchemaSerializationMode.IncludeSchema) Then
            Dim ds As Global.System.Data.DataSet = New Global.System.Data.DataSet
            ds.ReadXmlSchema(New Global.System.Xml.XmlTextReader(New Global.System.IO.StringReader(strSchema)))
            If (Not (ds.Tables("SP_GET_INFO_INDICADORES_MR")) Is Nothing) Then
                MyBase.Tables.Add(New SP_GET_INFO_INDICADORES_MRDataTable(ds.Tables("SP_GET_INFO_INDICADORES_MR")))
            End If
            Me.DataSetName = ds.DataSetName
            Me.Prefix = ds.Prefix
            Me.Namespace = ds.Namespace
            Me.Locale = ds.Locale
            Me.CaseSensitive = ds.CaseSensitive
            Me.EnforceConstraints = ds.EnforceConstraints
            Me.Merge(ds, false, Global.System.Data.MissingSchemaAction.Add)
            Me.InitVars
        Else
            Me.ReadXmlSchema(New Global.System.Xml.XmlTextReader(New Global.System.IO.StringReader(strSchema)))
        End If
        Me.GetSerializationData(info, context)
        Dim schemaChangedHandler As Global.System.ComponentModel.CollectionChangeEventHandler = AddressOf Me.SchemaChanged
        AddHandler MyBase.Tables.CollectionChanged, schemaChangedHandler
        AddHandler Me.Relations.CollectionChanged, schemaChangedHandler
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property SP_GET_INFO_INDICADORES_MR() As SP_GET_INFO_INDICADORES_MRDataTable
        Get
            Return Me.tableSP_GET_INFO_INDICADORES_MR
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.ComponentModel.BrowsableAttribute(true),  _
     Global.System.ComponentModel.DesignerSerializationVisibilityAttribute(Global.System.ComponentModel.DesignerSerializationVisibility.Visible)>  _
    Public Overrides Property SchemaSerializationMode() As Global.System.Data.SchemaSerializationMode
        Get
            Return Me._schemaSerializationMode
        End Get
        Set
            Me._schemaSerializationMode = value
        End Set
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.ComponentModel.DesignerSerializationVisibilityAttribute(Global.System.ComponentModel.DesignerSerializationVisibility.Hidden)>  _
    Public Shadows ReadOnly Property Tables() As Global.System.Data.DataTableCollection
        Get
            Return MyBase.Tables
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.ComponentModel.DesignerSerializationVisibilityAttribute(Global.System.ComponentModel.DesignerSerializationVisibility.Hidden)>  _
    Public Shadows ReadOnly Property Relations() As Global.System.Data.DataRelationCollection
        Get
            Return MyBase.Relations
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Protected Overrides Sub InitializeDerivedDataSet()
        Me.BeginInit
        Me.InitClass
        Me.EndInit
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Public Overrides Function Clone() As Global.System.Data.DataSet
        Dim cln As dsIndices = CType(MyBase.Clone,dsIndices)
        cln.InitVars
        cln.SchemaSerializationMode = Me.SchemaSerializationMode
        Return cln
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Protected Overrides Function ShouldSerializeTables() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Protected Overrides Function ShouldSerializeRelations() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Protected Overrides Sub ReadXmlSerializable(ByVal reader As Global.System.Xml.XmlReader)
        If (Me.DetermineSchemaSerializationMode(reader) = Global.System.Data.SchemaSerializationMode.IncludeSchema) Then
            Me.Reset
            Dim ds As Global.System.Data.DataSet = New Global.System.Data.DataSet
            ds.ReadXml(reader)
            If (Not (ds.Tables("SP_GET_INFO_INDICADORES_MR")) Is Nothing) Then
                MyBase.Tables.Add(New SP_GET_INFO_INDICADORES_MRDataTable(ds.Tables("SP_GET_INFO_INDICADORES_MR")))
            End If
            Me.DataSetName = ds.DataSetName
            Me.Prefix = ds.Prefix
            Me.Namespace = ds.Namespace
            Me.Locale = ds.Locale
            Me.CaseSensitive = ds.CaseSensitive
            Me.EnforceConstraints = ds.EnforceConstraints
            Me.Merge(ds, false, Global.System.Data.MissingSchemaAction.Add)
            Me.InitVars
        Else
            Me.ReadXml(reader)
            Me.InitVars
        End If
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Protected Overrides Function GetSchemaSerializable() As Global.System.Xml.Schema.XmlSchema
        Dim stream As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
        Me.WriteXmlSchema(New Global.System.Xml.XmlTextWriter(stream, Nothing))
        stream.Position = 0
        Return Global.System.Xml.Schema.XmlSchema.Read(New Global.System.Xml.XmlTextReader(stream), Nothing)
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Friend Overloads Sub InitVars()
        Me.InitVars(true)
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Friend Overloads Sub InitVars(ByVal initTable As Boolean)
        Me.tableSP_GET_INFO_INDICADORES_MR = CType(MyBase.Tables("SP_GET_INFO_INDICADORES_MR"),SP_GET_INFO_INDICADORES_MRDataTable)
        If (initTable = true) Then
            If (Not (Me.tableSP_GET_INFO_INDICADORES_MR) Is Nothing) Then
                Me.tableSP_GET_INFO_INDICADORES_MR.InitVars
            End If
        End If
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Private Sub InitClass()
        Me.DataSetName = "dsIndices"
        Me.Prefix = ""
        Me.Namespace = "http://tempuri.org/dsIndices.xsd"
        Me.EnforceConstraints = true
        Me.SchemaSerializationMode = Global.System.Data.SchemaSerializationMode.IncludeSchema
        Me.tableSP_GET_INFO_INDICADORES_MR = New SP_GET_INFO_INDICADORES_MRDataTable
        MyBase.Tables.Add(Me.tableSP_GET_INFO_INDICADORES_MR)
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Private Function ShouldSerializeSP_GET_INFO_INDICADORES_MR() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Private Sub SchemaChanged(ByVal sender As Object, ByVal e As Global.System.ComponentModel.CollectionChangeEventArgs)
        If (e.Action = Global.System.ComponentModel.CollectionChangeAction.Remove) Then
            Me.InitVars
        End If
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Public Shared Function GetTypedDataSetSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
        Dim ds As dsIndices = New dsIndices
        Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType
        Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence
        Dim any As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
        any.Namespace = ds.Namespace
        sequence.Items.Add(any)
        type.Particle = sequence
        Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
        If xs.Contains(dsSchema.TargetNamespace) Then
            Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
            Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
            Try 
                Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                dsSchema.Write(s1)
                Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                Do While schemas.MoveNext
                    schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                    s2.SetLength(0)
                    schema.Write(s2)
                    If (s1.Length = s2.Length) Then
                        s1.Position = 0
                        s2.Position = 0
                        
                        Do While ((s1.Position <> s1.Length)  _
                                    AndAlso (s1.ReadByte = s2.ReadByte))
                            
                            
                        Loop
                        If (s1.Position = s1.Length) Then
                            Return type
                        End If
                    End If
                    
                Loop
            Finally
                If (Not (s1) Is Nothing) Then
                    s1.Close
                End If
                If (Not (s2) Is Nothing) Then
                    s2.Close
                End If
            End Try
        End If
        xs.Add(dsSchema)
        Return type
    End Function
    
    Public Delegate Sub SP_GET_INFO_INDICADORES_MRRowChangeEventHandler(ByVal sender As Object, ByVal e As SP_GET_INFO_INDICADORES_MRRowChangeEvent)
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0"),  _
     Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class SP_GET_INFO_INDICADORES_MRDataTable
        Inherits Global.System.Data.DataTable
        Implements Global.System.Collections.IEnumerable
        
        Private columnIDESTABLECIMIENTO As Global.System.Data.DataColumn
        
        Private columnIDPROCESOCOMPRA As Global.System.Data.DataColumn
        
        Private columnCORRSUBGRUPO As Global.System.Data.DataColumn
        
        Private columnDESCSUBGRUPO As Global.System.Data.DataColumn
        
        Private columnIDPRODUCTO As Global.System.Data.DataColumn
        
        Private columnCORRPRODUCTO As Global.System.Data.DataColumn
        
        Private columnDESCPRODUCTO As Global.System.Data.DataColumn
        
        Private columnNOMBRECORTO As Global.System.Data.DataColumn
        
        Private columnDESCRIPCION As Global.System.Data.DataColumn
        
        Private columnCANTIDAD As Global.System.Data.DataColumn
        
        Private columnCANTIDADENTREGADA As Global.System.Data.DataColumn
        
        Private _column__MR As Global.System.Data.DataColumn
        
        Private _column__MR_Est As Global.System.Data.DataColumn
        
        Private columnNOMBRE As Global.System.Data.DataColumn
        
        Private columnIDALMACEN As Global.System.Data.DataColumn
        
        Private columnTITULOLICITACION As Global.System.Data.DataColumn
        
        Private columnIDPROVEEDOR As Global.System.Data.DataColumn
        
        Private columnIDALMACENENTREGA As Global.System.Data.DataColumn
        
        Private columnDESCLARGO As Global.System.Data.DataColumn
        
        Private columnNOMBREPRV As Global.System.Data.DataColumn
        
        Private columnAEC_IDDETALLE As Global.System.Data.DataColumn
        
        Private columnNUMEROCONTRATO As Global.System.Data.DataColumn
        
        Private columnIDCONTRATO As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "SP_GET_INFO_INDICADORES_MR"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property IDESTABLECIMIENTOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnIDESTABLECIMIENTO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property IDPROCESOCOMPRAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnIDPROCESOCOMPRA
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property CORRSUBGRUPOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCORRSUBGRUPO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property DESCSUBGRUPOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDESCSUBGRUPO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property IDPRODUCTOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnIDPRODUCTO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property CORRPRODUCTOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCORRPRODUCTO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property DESCPRODUCTOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDESCPRODUCTO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property NOMBRECORTOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnNOMBRECORTO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property DESCRIPCIONColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDESCRIPCION
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property CANTIDADColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCANTIDAD
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property CANTIDADENTREGADAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCANTIDADENTREGADA
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property ___MRColumn() As Global.System.Data.DataColumn
            Get
                Return Me._column__MR
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property ___MR_EstColumn() As Global.System.Data.DataColumn
            Get
                Return Me._column__MR_Est
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property NOMBREColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnNOMBRE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property IDALMACENColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnIDALMACEN
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property TITULOLICITACIONColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTITULOLICITACION
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property IDPROVEEDORColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnIDPROVEEDOR
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property IDALMACENENTREGAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnIDALMACENENTREGA
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property DESCLARGOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDESCLARGO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property NOMBREPRVColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnNOMBREPRV
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property AEC_IDDETALLEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnAEC_IDDETALLE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property NUMEROCONTRATOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnNUMEROCONTRATO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property IDCONTRATOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnIDCONTRATO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As SP_GET_INFO_INDICADORES_MRRow
            Get
                Return CType(Me.Rows(index),SP_GET_INFO_INDICADORES_MRRow)
            End Get
        End Property
        
        Public Event SP_GET_INFO_INDICADORES_MRRowChanging As SP_GET_INFO_INDICADORES_MRRowChangeEventHandler
        
        Public Event SP_GET_INFO_INDICADORES_MRRowChanged As SP_GET_INFO_INDICADORES_MRRowChangeEventHandler
        
        Public Event SP_GET_INFO_INDICADORES_MRRowDeleting As SP_GET_INFO_INDICADORES_MRRowChangeEventHandler
        
        Public Event SP_GET_INFO_INDICADORES_MRRowDeleted As SP_GET_INFO_INDICADORES_MRRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Sub AddSP_GET_INFO_INDICADORES_MRRow(ByVal row As SP_GET_INFO_INDICADORES_MRRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Function AddSP_GET_INFO_INDICADORES_MRRow( _
                    ByVal IDESTABLECIMIENTO As Integer,  _
                    ByVal IDPROCESOCOMPRA As Long,  _
                    ByVal CORRSUBGRUPO As String,  _
                    ByVal DESCSUBGRUPO As String,  _
                    ByVal IDPRODUCTO As Long,  _
                    ByVal CORRPRODUCTO As String,  _
                    ByVal DESCPRODUCTO As String,  _
                    ByVal NOMBRECORTO As String,  _
                    ByVal DESCRIPCION As String,  _
                    ByVal CANTIDAD As Decimal,  _
                    ByVal CANTIDADENTREGADA As Decimal,  _
                    ByVal ___MR As Decimal,  _
                    ByVal ___MR_Est As Decimal,  _
                    ByVal NOMBRE As String,  _
                    ByVal IDALMACEN As Integer,  _
                    ByVal TITULOLICITACION As String,  _
                    ByVal IDPROVEEDOR As Integer,  _
                    ByVal IDALMACENENTREGA As Integer,  _
                    ByVal DESCLARGO As String,  _
                    ByVal NOMBREPRV As String,  _
                    ByVal AEC_IDDETALLE As Integer,  _
                    ByVal NUMEROCONTRATO As String,  _
                    ByVal IDCONTRATO As Integer) As SP_GET_INFO_INDICADORES_MRRow
            Dim rowSP_GET_INFO_INDICADORES_MRRow As SP_GET_INFO_INDICADORES_MRRow = CType(Me.NewRow,SP_GET_INFO_INDICADORES_MRRow)
            Dim columnValuesArray() As Object = New Object() {IDESTABLECIMIENTO, IDPROCESOCOMPRA, CORRSUBGRUPO, DESCSUBGRUPO, IDPRODUCTO, CORRPRODUCTO, DESCPRODUCTO, NOMBRECORTO, DESCRIPCION, CANTIDAD, CANTIDADENTREGADA, ___MR, ___MR_Est, NOMBRE, IDALMACEN, TITULOLICITACION, IDPROVEEDOR, IDALMACENENTREGA, DESCLARGO, NOMBREPRV, AEC_IDDETALLE, NUMEROCONTRATO, IDCONTRATO}
            rowSP_GET_INFO_INDICADORES_MRRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowSP_GET_INFO_INDICADORES_MRRow)
            Return rowSP_GET_INFO_INDICADORES_MRRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overridable Function GetEnumerator() As Global.System.Collections.IEnumerator Implements Global.System.Collections.IEnumerable.GetEnumerator
            Return Me.Rows.GetEnumerator
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As SP_GET_INFO_INDICADORES_MRDataTable = CType(MyBase.Clone,SP_GET_INFO_INDICADORES_MRDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New SP_GET_INFO_INDICADORES_MRDataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub InitVars()
            Me.columnIDESTABLECIMIENTO = MyBase.Columns("IDESTABLECIMIENTO")
            Me.columnIDPROCESOCOMPRA = MyBase.Columns("IDPROCESOCOMPRA")
            Me.columnCORRSUBGRUPO = MyBase.Columns("CORRSUBGRUPO")
            Me.columnDESCSUBGRUPO = MyBase.Columns("DESCSUBGRUPO")
            Me.columnIDPRODUCTO = MyBase.Columns("IDPRODUCTO")
            Me.columnCORRPRODUCTO = MyBase.Columns("CORRPRODUCTO")
            Me.columnDESCPRODUCTO = MyBase.Columns("DESCPRODUCTO")
            Me.columnNOMBRECORTO = MyBase.Columns("NOMBRECORTO")
            Me.columnDESCRIPCION = MyBase.Columns("DESCRIPCION")
            Me.columnCANTIDAD = MyBase.Columns("CANTIDAD")
            Me.columnCANTIDADENTREGADA = MyBase.Columns("CANTIDADENTREGADA")
            Me._column__MR = MyBase.Columns("% MR")
            Me._column__MR_Est = MyBase.Columns("% MR_Est")
            Me.columnNOMBRE = MyBase.Columns("NOMBRE")
            Me.columnIDALMACEN = MyBase.Columns("IDALMACEN")
            Me.columnTITULOLICITACION = MyBase.Columns("TITULOLICITACION")
            Me.columnIDPROVEEDOR = MyBase.Columns("IDPROVEEDOR")
            Me.columnIDALMACENENTREGA = MyBase.Columns("IDALMACENENTREGA")
            Me.columnDESCLARGO = MyBase.Columns("DESCLARGO")
            Me.columnNOMBREPRV = MyBase.Columns("NOMBREPRV")
            Me.columnAEC_IDDETALLE = MyBase.Columns("AEC_IDDETALLE")
            Me.columnNUMEROCONTRATO = MyBase.Columns("NUMEROCONTRATO")
            Me.columnIDCONTRATO = MyBase.Columns("IDCONTRATO")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitClass()
            Me.columnIDESTABLECIMIENTO = New Global.System.Data.DataColumn("IDESTABLECIMIENTO", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnIDESTABLECIMIENTO)
            Me.columnIDPROCESOCOMPRA = New Global.System.Data.DataColumn("IDPROCESOCOMPRA", GetType(Long), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnIDPROCESOCOMPRA)
            Me.columnCORRSUBGRUPO = New Global.System.Data.DataColumn("CORRSUBGRUPO", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCORRSUBGRUPO)
            Me.columnDESCSUBGRUPO = New Global.System.Data.DataColumn("DESCSUBGRUPO", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDESCSUBGRUPO)
            Me.columnIDPRODUCTO = New Global.System.Data.DataColumn("IDPRODUCTO", GetType(Long), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnIDPRODUCTO)
            Me.columnCORRPRODUCTO = New Global.System.Data.DataColumn("CORRPRODUCTO", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCORRPRODUCTO)
            Me.columnDESCPRODUCTO = New Global.System.Data.DataColumn("DESCPRODUCTO", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDESCPRODUCTO)
            Me.columnNOMBRECORTO = New Global.System.Data.DataColumn("NOMBRECORTO", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnNOMBRECORTO)
            Me.columnDESCRIPCION = New Global.System.Data.DataColumn("DESCRIPCION", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDESCRIPCION)
            Me.columnCANTIDAD = New Global.System.Data.DataColumn("CANTIDAD", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCANTIDAD)
            Me.columnCANTIDADENTREGADA = New Global.System.Data.DataColumn("CANTIDADENTREGADA", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCANTIDADENTREGADA)
            Me._column__MR = New Global.System.Data.DataColumn("% MR", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            Me._column__MR.ExtendedProperties.Add("Generator_ColumnVarNameInTable", "_column__MR")
            Me._column__MR.ExtendedProperties.Add("Generator_UserColumnName", "% MR")
            MyBase.Columns.Add(Me._column__MR)
            Me._column__MR_Est = New Global.System.Data.DataColumn("% MR_Est", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            Me._column__MR_Est.ExtendedProperties.Add("Generator_ColumnVarNameInTable", "_column__MR_Est")
            Me._column__MR_Est.ExtendedProperties.Add("Generator_UserColumnName", "% MR_Est")
            MyBase.Columns.Add(Me._column__MR_Est)
            Me.columnNOMBRE = New Global.System.Data.DataColumn("NOMBRE", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnNOMBRE)
            Me.columnIDALMACEN = New Global.System.Data.DataColumn("IDALMACEN", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnIDALMACEN)
            Me.columnTITULOLICITACION = New Global.System.Data.DataColumn("TITULOLICITACION", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTITULOLICITACION)
            Me.columnIDPROVEEDOR = New Global.System.Data.DataColumn("IDPROVEEDOR", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnIDPROVEEDOR)
            Me.columnIDALMACENENTREGA = New Global.System.Data.DataColumn("IDALMACENENTREGA", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnIDALMACENENTREGA)
            Me.columnDESCLARGO = New Global.System.Data.DataColumn("DESCLARGO", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDESCLARGO)
            Me.columnNOMBREPRV = New Global.System.Data.DataColumn("NOMBREPRV", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnNOMBREPRV)
            Me.columnAEC_IDDETALLE = New Global.System.Data.DataColumn("AEC_IDDETALLE", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnAEC_IDDETALLE)
            Me.columnNUMEROCONTRATO = New Global.System.Data.DataColumn("NUMEROCONTRATO", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnNUMEROCONTRATO)
            Me.columnIDCONTRATO = New Global.System.Data.DataColumn("IDCONTRATO", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnIDCONTRATO)
            Me.columnIDESTABLECIMIENTO.AllowDBNull = false
            Me.columnIDPROCESOCOMPRA.AllowDBNull = false
            Me.columnCORRSUBGRUPO.AllowDBNull = false
            Me.columnCORRSUBGRUPO.MaxLength = 3
            Me.columnDESCSUBGRUPO.AllowDBNull = false
            Me.columnDESCSUBGRUPO.MaxLength = 90
            Me.columnIDPRODUCTO.AllowDBNull = false
            Me.columnCORRPRODUCTO.AllowDBNull = false
            Me.columnCORRPRODUCTO.MaxLength = 8
            Me.columnDESCPRODUCTO.AllowDBNull = false
            Me.columnDESCPRODUCTO.MaxLength = 1000
            Me.columnNOMBRECORTO.AllowDBNull = false
            Me.columnNOMBRECORTO.MaxLength = 4
            Me.columnDESCRIPCION.AllowDBNull = false
            Me.columnDESCRIPCION.MaxLength = 6
            Me.columnCANTIDAD.AllowDBNull = false
            Me.columnCANTIDADENTREGADA.AllowDBNull = false
            Me._column__MR.ReadOnly = true
            Me._column__MR_Est.ReadOnly = true
            Me.columnNOMBRE.AllowDBNull = false
            Me.columnNOMBRE.MaxLength = 70
            Me.columnIDALMACEN.AllowDBNull = false
            Me.columnTITULOLICITACION.MaxLength = 200
            Me.columnIDPROVEEDOR.AllowDBNull = false
            Me.columnIDALMACENENTREGA.AllowDBNull = false
            Me.columnDESCLARGO.ReadOnly = true
            Me.columnDESCLARGO.MaxLength = 1753
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function NewSP_GET_INFO_INDICADORES_MRRow() As SP_GET_INFO_INDICADORES_MRRow
            Return CType(Me.NewRow,SP_GET_INFO_INDICADORES_MRRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New SP_GET_INFO_INDICADORES_MRRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(SP_GET_INFO_INDICADORES_MRRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.SP_GET_INFO_INDICADORES_MRRowChangedEvent) Is Nothing) Then
                RaiseEvent SP_GET_INFO_INDICADORES_MRRowChanged(Me, New SP_GET_INFO_INDICADORES_MRRowChangeEvent(CType(e.Row,SP_GET_INFO_INDICADORES_MRRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.SP_GET_INFO_INDICADORES_MRRowChangingEvent) Is Nothing) Then
                RaiseEvent SP_GET_INFO_INDICADORES_MRRowChanging(Me, New SP_GET_INFO_INDICADORES_MRRowChangeEvent(CType(e.Row,SP_GET_INFO_INDICADORES_MRRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.SP_GET_INFO_INDICADORES_MRRowDeletedEvent) Is Nothing) Then
                RaiseEvent SP_GET_INFO_INDICADORES_MRRowDeleted(Me, New SP_GET_INFO_INDICADORES_MRRowChangeEvent(CType(e.Row,SP_GET_INFO_INDICADORES_MRRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.SP_GET_INFO_INDICADORES_MRRowDeletingEvent) Is Nothing) Then
                RaiseEvent SP_GET_INFO_INDICADORES_MRRowDeleting(Me, New SP_GET_INFO_INDICADORES_MRRowChangeEvent(CType(e.Row,SP_GET_INFO_INDICADORES_MRRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub RemoveSP_GET_INFO_INDICADORES_MRRow(ByVal row As SP_GET_INFO_INDICADORES_MRRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence
            Dim ds As dsIndices = New dsIndices
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "SP_GET_INFO_INDICADORES_MRDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Partial Public Class SP_GET_INFO_INDICADORES_MRRow
        Inherits Global.System.Data.DataRow
        
        Private tableSP_GET_INFO_INDICADORES_MR As SP_GET_INFO_INDICADORES_MRDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableSP_GET_INFO_INDICADORES_MR = CType(Me.Table,SP_GET_INFO_INDICADORES_MRDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property IDESTABLECIMIENTO() As Integer
            Get
                Return CType(Me(Me.tableSP_GET_INFO_INDICADORES_MR.IDESTABLECIMIENTOColumn),Integer)
            End Get
            Set
                Me(Me.tableSP_GET_INFO_INDICADORES_MR.IDESTABLECIMIENTOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property IDPROCESOCOMPRA() As Long
            Get
                Return CType(Me(Me.tableSP_GET_INFO_INDICADORES_MR.IDPROCESOCOMPRAColumn),Long)
            End Get
            Set
                Me(Me.tableSP_GET_INFO_INDICADORES_MR.IDPROCESOCOMPRAColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property CORRSUBGRUPO() As String
            Get
                Return CType(Me(Me.tableSP_GET_INFO_INDICADORES_MR.CORRSUBGRUPOColumn),String)
            End Get
            Set
                Me(Me.tableSP_GET_INFO_INDICADORES_MR.CORRSUBGRUPOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property DESCSUBGRUPO() As String
            Get
                Return CType(Me(Me.tableSP_GET_INFO_INDICADORES_MR.DESCSUBGRUPOColumn),String)
            End Get
            Set
                Me(Me.tableSP_GET_INFO_INDICADORES_MR.DESCSUBGRUPOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property IDPRODUCTO() As Long
            Get
                Return CType(Me(Me.tableSP_GET_INFO_INDICADORES_MR.IDPRODUCTOColumn),Long)
            End Get
            Set
                Me(Me.tableSP_GET_INFO_INDICADORES_MR.IDPRODUCTOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property CORRPRODUCTO() As String
            Get
                Return CType(Me(Me.tableSP_GET_INFO_INDICADORES_MR.CORRPRODUCTOColumn),String)
            End Get
            Set
                Me(Me.tableSP_GET_INFO_INDICADORES_MR.CORRPRODUCTOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property DESCPRODUCTO() As String
            Get
                Return CType(Me(Me.tableSP_GET_INFO_INDICADORES_MR.DESCPRODUCTOColumn),String)
            End Get
            Set
                Me(Me.tableSP_GET_INFO_INDICADORES_MR.DESCPRODUCTOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property NOMBRECORTO() As String
            Get
                Return CType(Me(Me.tableSP_GET_INFO_INDICADORES_MR.NOMBRECORTOColumn),String)
            End Get
            Set
                Me(Me.tableSP_GET_INFO_INDICADORES_MR.NOMBRECORTOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property DESCRIPCION() As String
            Get
                Return CType(Me(Me.tableSP_GET_INFO_INDICADORES_MR.DESCRIPCIONColumn),String)
            End Get
            Set
                Me(Me.tableSP_GET_INFO_INDICADORES_MR.DESCRIPCIONColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property CANTIDAD() As Decimal
            Get
                Return CType(Me(Me.tableSP_GET_INFO_INDICADORES_MR.CANTIDADColumn),Decimal)
            End Get
            Set
                Me(Me.tableSP_GET_INFO_INDICADORES_MR.CANTIDADColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property CANTIDADENTREGADA() As Decimal
            Get
                Return CType(Me(Me.tableSP_GET_INFO_INDICADORES_MR.CANTIDADENTREGADAColumn),Decimal)
            End Get
            Set
                Me(Me.tableSP_GET_INFO_INDICADORES_MR.CANTIDADENTREGADAColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property ___MR() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableSP_GET_INFO_INDICADORES_MR.___MRColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna '% MR' de la tabla 'SP_GET_INFO_INDICADORES_MR' es DBNull."& _ 
                            "", e)
                End Try
            End Get
            Set
                Me(Me.tableSP_GET_INFO_INDICADORES_MR.___MRColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property ___MR_Est() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableSP_GET_INFO_INDICADORES_MR.___MR_EstColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna '% MR_Est' de la tabla 'SP_GET_INFO_INDICADORES_MR' es DBN"& _ 
                            "ull.", e)
                End Try
            End Get
            Set
                Me(Me.tableSP_GET_INFO_INDICADORES_MR.___MR_EstColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property NOMBRE() As String
            Get
                Return CType(Me(Me.tableSP_GET_INFO_INDICADORES_MR.NOMBREColumn),String)
            End Get
            Set
                Me(Me.tableSP_GET_INFO_INDICADORES_MR.NOMBREColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property IDALMACEN() As Integer
            Get
                Return CType(Me(Me.tableSP_GET_INFO_INDICADORES_MR.IDALMACENColumn),Integer)
            End Get
            Set
                Me(Me.tableSP_GET_INFO_INDICADORES_MR.IDALMACENColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property TITULOLICITACION() As String
            Get
                Try 
                    Return CType(Me(Me.tableSP_GET_INFO_INDICADORES_MR.TITULOLICITACIONColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'TITULOLICITACION' de la tabla 'SP_GET_INFO_INDICADORES_MR"& _ 
                            "' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableSP_GET_INFO_INDICADORES_MR.TITULOLICITACIONColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property IDPROVEEDOR() As Integer
            Get
                Return CType(Me(Me.tableSP_GET_INFO_INDICADORES_MR.IDPROVEEDORColumn),Integer)
            End Get
            Set
                Me(Me.tableSP_GET_INFO_INDICADORES_MR.IDPROVEEDORColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property IDALMACENENTREGA() As Integer
            Get
                Return CType(Me(Me.tableSP_GET_INFO_INDICADORES_MR.IDALMACENENTREGAColumn),Integer)
            End Get
            Set
                Me(Me.tableSP_GET_INFO_INDICADORES_MR.IDALMACENENTREGAColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property DESCLARGO() As String
            Get
                Try 
                    Return CType(Me(Me.tableSP_GET_INFO_INDICADORES_MR.DESCLARGOColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'DESCLARGO' de la tabla 'SP_GET_INFO_INDICADORES_MR' es DB"& _ 
                            "Null.", e)
                End Try
            End Get
            Set
                Me(Me.tableSP_GET_INFO_INDICADORES_MR.DESCLARGOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property NOMBREPRV() As String
            Get
                Try 
                    Return CType(Me(Me.tableSP_GET_INFO_INDICADORES_MR.NOMBREPRVColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'NOMBREPRV' de la tabla 'SP_GET_INFO_INDICADORES_MR' es DB"& _ 
                            "Null.", e)
                End Try
            End Get
            Set
                Me(Me.tableSP_GET_INFO_INDICADORES_MR.NOMBREPRVColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property AEC_IDDETALLE() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableSP_GET_INFO_INDICADORES_MR.AEC_IDDETALLEColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'AEC_IDDETALLE' de la tabla 'SP_GET_INFO_INDICADORES_MR' e"& _ 
                            "s DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableSP_GET_INFO_INDICADORES_MR.AEC_IDDETALLEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property NUMEROCONTRATO() As String
            Get
                Try 
                    Return CType(Me(Me.tableSP_GET_INFO_INDICADORES_MR.NUMEROCONTRATOColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'NUMEROCONTRATO' de la tabla 'SP_GET_INFO_INDICADORES_MR' "& _ 
                            "es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableSP_GET_INFO_INDICADORES_MR.NUMEROCONTRATOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property IDCONTRATO() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableSP_GET_INFO_INDICADORES_MR.IDCONTRATOColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'IDCONTRATO' de la tabla 'SP_GET_INFO_INDICADORES_MR' es D"& _ 
                            "BNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableSP_GET_INFO_INDICADORES_MR.IDCONTRATOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Is___MRNull() As Boolean
            Return Me.IsNull(Me.tableSP_GET_INFO_INDICADORES_MR.___MRColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Set___MRNull()
            Me(Me.tableSP_GET_INFO_INDICADORES_MR.___MRColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Is___MR_EstNull() As Boolean
            Return Me.IsNull(Me.tableSP_GET_INFO_INDICADORES_MR.___MR_EstColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Set___MR_EstNull()
            Me(Me.tableSP_GET_INFO_INDICADORES_MR.___MR_EstColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsTITULOLICITACIONNull() As Boolean
            Return Me.IsNull(Me.tableSP_GET_INFO_INDICADORES_MR.TITULOLICITACIONColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetTITULOLICITACIONNull()
            Me(Me.tableSP_GET_INFO_INDICADORES_MR.TITULOLICITACIONColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsDESCLARGONull() As Boolean
            Return Me.IsNull(Me.tableSP_GET_INFO_INDICADORES_MR.DESCLARGOColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetDESCLARGONull()
            Me(Me.tableSP_GET_INFO_INDICADORES_MR.DESCLARGOColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsNOMBREPRVNull() As Boolean
            Return Me.IsNull(Me.tableSP_GET_INFO_INDICADORES_MR.NOMBREPRVColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetNOMBREPRVNull()
            Me(Me.tableSP_GET_INFO_INDICADORES_MR.NOMBREPRVColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsAEC_IDDETALLENull() As Boolean
            Return Me.IsNull(Me.tableSP_GET_INFO_INDICADORES_MR.AEC_IDDETALLEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetAEC_IDDETALLENull()
            Me(Me.tableSP_GET_INFO_INDICADORES_MR.AEC_IDDETALLEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsNUMEROCONTRATONull() As Boolean
            Return Me.IsNull(Me.tableSP_GET_INFO_INDICADORES_MR.NUMEROCONTRATOColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetNUMEROCONTRATONull()
            Me(Me.tableSP_GET_INFO_INDICADORES_MR.NUMEROCONTRATOColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsIDCONTRATONull() As Boolean
            Return Me.IsNull(Me.tableSP_GET_INFO_INDICADORES_MR.IDCONTRATOColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetIDCONTRATONull()
            Me(Me.tableSP_GET_INFO_INDICADORES_MR.IDCONTRATOColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Public Class SP_GET_INFO_INDICADORES_MRRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As SP_GET_INFO_INDICADORES_MRRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New(ByVal row As SP_GET_INFO_INDICADORES_MRRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Row() As SP_GET_INFO_INDICADORES_MRRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
End Class
